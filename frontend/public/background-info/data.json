{
  "backgroundInfo": [
    {
      "infoId": "live-changes",
      "content": "**Live Changes** displays files that Claude creates or modifies in real-time during your conversation. This panel automatically updates as Claude works on your project, showing you the exact content of each file. HTML files are rendered with a live preview iframe, allowing you to see the results immediately. This gives you instant visibility into Claude's work without leaving the chat interface.",
      "icon": "AiOutlineProduct"
    },
    {
      "infoId": "system-prompt",
      "content": "**System Prompt** defines the behavior and personality of your Claude assistant. This markdown document acts as instructions that Claude follows throughout your conversation. You can customize how Claude responds, set project-specific guidelines, and define the scope of work. Changes take effect immediately in new chat sessions.",
      "icon": "LiaHatCowboySideSolid"
    },
    {
      "infoId": "permissions",
      "content": "**Permissions** control which tools and commands Claude can use in your project. Add allowed tools to grant Claude specific capabilities like file operations, network requests, or system commands. This security feature helps you maintain control over what actions Claude can perform. Remember to save your changes after adding or removing permissions.",
      "icon": "MdOutlineSecurity"
    },
    {
      "infoId": "integrations",
      "content": "**Integrations** configure Model Context Protocol (**MCP**) servers that extend Eteinnes's capabilities by connecting to external data/systems. \n\r There is sample implementation available on https://host.docker.internal:6060/mcp and /sse which returns items of a pet store.",
      "icon": "VscDebugDisconnect"
    },
    {
      "infoId": "interceptors",
      "content": "**Interceptors** provide real-time monitoring of Claude's activity in your project. Events show general activities and notifications, while Hooks capture specific tool usage moments (before and after execution). This visibility helps you understand Claude's decision-making process and debug issues. Use the filter fields to search through the activity log efficiently.",
      "icon": "PiEyeThin"
    },
    {
      "infoId": "filesystem",
      "content": "**Filesystem Browser** displays your project's directory structure and files. This read-only view helps you understand the project layout without leaving the interface. System files like CLAUDE.md and .claude directories are hidden by default but can be shown using the checkbox. Click the refresh button to update the view after file changes.",
      "icon": "react-icons/md"
    },
    {
      "infoId": "memory",
      "content": "**Long Term Memory** remembers important preferences on a per project base. The backend contains a Mem0 compatible implementation - you have to adjust the extraction prompt for your use cases.",
      "icon": "SiPostgresql"
    },
    {
      "infoId": "checkpoints",
      "content": "**Checkpoints** are a way to restore the projects filesystem to a prior named state. The backend contains a local git server based provider which uses git/rsync in the claude-code container.",
      "icon": "IoIosGitPullRequest"
    },
    {
      "infoId": "scheduled-input",
      "content": "**Scheduled Input** Sends a prepared user message to the model on a regular base. The messages appear in the message pane with the task name as prefix.",
      "icon": "MdOutlineScheduleSend"
    },
    {
      "infoId": "budget-control",
      "content": "**Budget Control** allows the user to track the expenses in a workspace. The amount is calculated by input and output token consumption in the backend. Adjust or refine the .env preset values for a precise calculation.",
      "icon": "GiPayMoney"
    }
  ]
}
